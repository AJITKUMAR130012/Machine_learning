# -*- coding: utf-8 -*-
"""Comparision between Linear_regression and Ridge_regressin.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GsKDlhfobV6QfKhEOopQnfEN7xzcxOGh
"""

import numpy as np
import pandas as pd
from sklearn.datasets import make_regression

X,y=make_regression(n_samples=100,n_features=4,n_informative=4,n_targets=1,noise=20,random_state=20)

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,random_state=2)

print(X_train.shape,X_test.shape,y_train.shape,y_test.shape)

from sklearn.linear_model import LinearRegression

l=LinearRegression()

l.fit(X_train,y_train)

l.score(X_test,y_test)

l.coef_

l.intercept_

from sklearn.linear_model import Ridge

r=Ridge(alpha=0.1)

r.fit(X_train,y_train)

r.intercept_

#here we can see that coef value is less than the linear_regression
r.coef_

l.score(X_test,y_test)

# score of r in slightly greater than linear_model
r.score(X_test,y_test)

