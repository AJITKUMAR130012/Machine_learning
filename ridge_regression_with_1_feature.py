# -*- coding: utf-8 -*-
"""Ridge_regression_with_1_feature.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u_loBdQ07WjtYjBfUynHNHfPAaVOyFoe
"""

import numpy as np
import pandas as pd
from sklearn.datasets import make_regression

X,y=make_regression(n_samples=100,n_features=1,n_informative=1,n_targets=1,random_state=2)

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,random_state=3)

print(X_train.shape,X_test.shape,y_train.shape,y_test.shape)

class MeraRidge:
    def __init__(self,alpha=0.1):
        self.m=None
        self.b=None
        self.alpha=alpha
    def fit(self,X_train,y_train):
        num=0
        den=0
        for i in range(X_train.shape[0]):
            num=num+(y_train[i]-np.mean(y_train)) *(X_train[i]-np.mean(X_train))
            den=den+(X_train[i]-np.mean(X_train)) * (X_train[i]-np.mean(X_train))
        self.m=num/(den+self.alpha)
        self.b=np.mean(y_train)-self.m*np.mean(X_train)
        print(self.m)
        print(self.b)

from sklearn.linear_model import Ridge

r=Ridge(alpha=0.1)

r.fit(X_train,y_train)

r.coef_

r.intercept_

R=MeraRidge(0.1)

R.fit(X_train,y_train)

